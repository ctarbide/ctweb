
=all
,.PHONY: all
,all: $(C_PROGRAMS)
@

=strlcpy.c
type nofake
source strlcpy.nw
chunk * strlcpy.c
@

=strlcat.c
type nofake
source strlcat.nw
chunk * strlcat.c
@

=realpath.c
type nofake
source realpath.nw
chunk * realpath.c
@

=protos.h
type nofake
source strlcpy.nw
source strlcat.nw
source realpath.nw
chunk header protos.h
@

=strlcat
type c-object
dependency config.h
dependency strlcat.c
@

=strlcpy
type c-object
dependency config.h
dependency strlcpy.c
@

=realpath
type c-object
dependency config.h
dependency protos.h
dependency realpath.c
@

=realpath-main
type c-program
dependency config.h
dependency protos.h
dependency strlcat
dependency strlcpy
dependency realpath
dependency realpath-main.c
@

=nofake
,NOFAKE_OR_NOTANGLE = $(NOFAKE)
#NOFAKE_OR_NOTANGLE = notangle
,nofake: nofake.nw
,	$(NOFAKE_OR_NOTANGLE) -Rnofake nofake.nw > .tmp.nofake
,	$(MV) .tmp.nofake nofake
,	$(CHMOD_0555) nofake
@

=functions.awk
,# note: this target is not built automatically since it is
,#       critical to the bootstrapping process
,functions.awk: functions.nw
,	$(NOFAKE) functions.nw > .tmp.functions.awk
,	$(MV) .tmp.functions.awk functions.awk
,	$(CHMOD_0444) functions.awk
@

=gen-Makefile.awk
,# note: this target is not built automatically since it is
,#       critical to the bootstrapping process
,gen-Makefile.awk: functions.awk gen-Makefile.nw $(NOFAKE)
,	( set -eu; \
,	    $(AWK) -f functions.awk < functions.awk; \
,	    $(CAT) gen-Makefile.nw; \
,	) | $(NOFAKE) > .tmp.gen-Makefile.awk
,	$(MV) .tmp.gen-Makefile.awk gen-Makefile.awk
,	$(CHMOD_0444) gen-Makefile.awk
@

=clean
,.PHONY: clean
,clean:
,	$(RM) *.$(OBJEXT) *-all.c $(C_PROGRAMS) $(NOFAKE_CHUNKS)
@
